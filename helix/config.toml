theme = "catppuccin_mocha"

[editor]
line-number = "relative"
mouse = true
middle-click-paste = true
scroll-lines = 3
shell = ["zsh", "-c"]
idle-timeout = 200
completion-trigger-len = 2
completion-replace = true
auto-pairs = true
auto-format = true
auto-save = true
bufferline = "multiple"
color-modes = true
true-color = true
cursorline = true
cursorcolumn = false
gutters = ["diagnostics", "line-numbers", "spacer", "diff"]

[editor.statusline]
left = ["mode", "spinner", "file-name", "file-modification-indicator"]
center = ["diagnostics", "workspace-diagnostics"]
right = ["selections", "position", "file-encoding", "file-line-ending", "file-type"]
separator = "â”‚"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.lsp]
display-messages = true
display-inlay-hints = true
auto-signature-help = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false
parents = true
ignore = true
git-ignore = true
git-global = true
git-exclude = true
max-depth = 10

[editor.search]
smart-case = true
wrap-around = true

[editor.indent-guides]
render = false

[keys.normal]
esc = ["collapse_selection", "keep_primary_selection"]
G = "goto_file_end"
X = "extend_line_above"
D = ["ensure_selections_forward", "extend_to_line_end", "delete_selection"]
";" = { o = ":o", w = ":w", q = ":q" }
space = { w = ":w", q = ":q", e = "file_picker", W = ":wq", Q = ":quit!", r = ":sh hemux", v = ":sh hemux-last" }
C-n = "file_picker"
C-p = "command_palette"
C-s = ":w"
tab = "match_brackets"
g = { a = "code_action", d = "goto_definition", r = "goto_reference", h = "select_prev_sibling", j = "select_next_sibling" }
z = { a = "toggle_comments", c = "toggle_comments" }
S-A-down = ["extend_to_line_bounds", "yank", "open_below", "normal_mode", "replace_with_yanked", "collapse_selection"]
S-A-up = ["extend_to_line_bounds", "yank", "open_above", "normal_mode", "replace_with_yanked", "collapse_selection"]
A-y = ":sh nu ~/.config/yazelix/nushell/reveal_in_yazi.zsh \"%{buffer_name}\""
A-g = ":sh zellij run -f -c -- lazygit"
A-t = ":sh zellij run --name \"zsh terminal\" -- nu -c \"cd (if (which git | length) > 0 and (do -i { git rev-parse --show-toplevel } | complete).exit_code == 0 { do -i { git rev-parse --show-toplevel } | str trim } else { $env.PWD }); exec zsh\""

[keys.insert]
C-space = "completion"
C-w = ["move_prev_word_start", "delete_selection"]
C-k = "kill_to_line_end"
C-c = ["normal_mode", "collapse_selection"]
S-A-down = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", "collapse_selection"]
S-A-up = ["normal_mode", "extend_to_line_bounds", "yank", "open_above", "replace_with_yanked", "collapse_selection"]
